#!/bin/sh -eu

PROGNAME="$(basename $0)"
BASEDIR="$(cd $(dirname $0); pwd)"
PROJDIR="$(cd $BASEDIR/..; pwd)"

NO_COMMIT=NO

help() {
    cat <<EOF >&2
USAGE:
  $PROGNAME <version>
  $PROGNAME -h | --help

OPTIONS:
  -h, --help

ARGUMENTS:
  version
    Version string in the semver format.
EOF
    exit 0
}

log() {
  echo "$1" >&2
}

error() {
  log "ERROR: $1"
  exit 1
}

while [ $# -gt 0 ]
do
  case "$1" in
    '-h' | '--help')
      help
      ;;
    '--no-commit')
      NO_COMMIT=YES
      shift
      ;;
    *)
      break
      ;;
  esac
done

if [ $# -eq 0 ]; then
  error "VERSION is required"
fi

VERSION="$1"

log "Pulling changes from origin..."
git pull

log "Bumping the version to $VERSION..."
for MANIFEST in $(find $PROJDIR -name Cargo.toml)
do
  # Don't use the -i option of `sed`.
  # The incompatibility between macOS and GNU will cause troubles.
  sed -e "s/^version = .*/version = \"$VERSION\"/" $MANIFEST | sponge $MANIFEST
  git add $MANIFEST
done
cargo build
if [ "$NO_COMMIT" = NO ]; then
  git commit -m "misc: bump version to $VERSION"
fi

# TODO: Genereate CHANGELOG.md

if [ "$NO_COMMIT" = NO ]; then
  log "Making an annotated tag for $VERSION..."
  git tag -a "$VERSION" -m "release: $VERSION"
fi

cat <<EOF >&2
Done.

Run the following commands after confirmation:

  git push -u origin master
  git push origin $VERSION
EOF
