#!/usr/bin/env node

const SUPPORTED = [
  '/version',
  '/status',
  '/channels',
  '/services',
  '/services/{id}',
  '/programs',
  '/programs/{id}',
  '/tuners',
  '/channels/{type}/{channel}/stream',
  '/channels/{type}/{channel}/services/{id}/stream',
  '/services/{id}/stream',
  '/programs/{id}/stream',
  '/docs',
];

let chunks = [];

process.stdin.setEncoding('utf8');
process.stdin.on('data', (chunk) => chunks.push(chunk));
process.stdin.on('end', () => {
  let json = chunks.join('');
  let swagger = JSON.parse(json);

  swagger.info = {
    title: 'Web API endpoints for Mirakurun.Client',
    version: swagger.info.version,
    description: 'Generated by `mirakurun-openapi-json | fixup-openapi-json`'
  };

  let paths = {};
  for (const [path, data] of Object.entries(swagger.paths)) {
    if (SUPPORTED.includes(path)) {
      paths[path] = data;
    }
  }

  swagger.paths = paths;

  delete swagger.paths['/channels'].parameters;
  delete swagger.paths['/services'].parameters;
  delete swagger.paths['/programs'].parameters;

  swagger.definitions.Version = {
    type: 'string',
  };

  swagger.definitions.Status = {
    type: 'object',
    properties: {},
  };

  console.log(JSON.stringify(swagger));
});
