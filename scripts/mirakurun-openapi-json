#!/bin/sh -eu

PROGNAME=$(basename $0)
BASEDIR=$(cd $(dirname $0); pwd)
IMAGE='chinachu/mirakurun'

if [ "$(uname)" != Linux ] || id -nG | grep -q docker; then
  DOCKER='docker'
else
  DOCKER='sudo docker'
fi

CLEAN=no
PORT=40772
WAIT=10
VERSION=latest
CONTAINER=

help() {
  cat <<EOF >&2
Print OpenAPI/Swagger JSON obtained from Mirakurun.

USAGE:
  $PROGNAME [<version>]
  $PROGNAME -h | --help

OPTIONS:
  -h, --help
    Show help.

  -c, --clean
    Remove $IMAGE at exit.

  -p, --port  [default: $PORT]
    TCP port to be exposed for Mirakurun.

  -w, --wait <wait>  [default: $WAIT]
    Time to wait for Mirakurun to start (seconds).

ARGUMENTS:
  version  [default: $VERSION]
    Mirakurun version like 3.1.0, which is one of available tags for the
    $IMAGE Docker image.

DESCRIPTION:
  This script obtains OpenAPI/Swagger JSON from Mirakurun launched on a Docker
  container.

TYPICAL USAGE:
  mirakurun-openapi-json -c | fixup-openapi-json >mirakurun.openapi.json
EOF
  exit 0
}

log() {
  echo "$1" >&2
}

error() {
  log "ERROR: $1"
  exit 1
}

clean() {
  sleep 1
  if [ -n "$CONTAINER" ]; then
    $DOCKER container rm -f "$CONTAINER" >/dev/null
    log "Removed $CONTAINER"
  fi
  if [ "$CLEAN" = yes ]; then
    $DOCKER image rm -f $IMAGE:$VERSION >/dev/null
    log "Removed $IMAGE:$VERSION"
  fi
}

while [ $# -gt 0 ]
do
  case "$1" in
    '-h' | '--help')
      help
      ;;
    '-c' | '--clean')
      CLEAN=yes
      shift
      ;;
    '-p' | '--port')
      PORT="$2"
      shift 2
      ;;
    '-w' | '--wait')
      WAIT="$2"
      shift 2
      ;;
    *)
      break
      ;;
  esac
done

if [ $# -gt 0 ]; then
  VERSION="$1"
fi

trap "clean" EXIT INT TERM

log "Launching $IMAGE:$VERSION..."
CONTAINER=$($DOCKER run --rm --init -d --cap-add SYS_ADMIN --cap-add SYS_NICE \
                    -p $PORT:40772 $IMAGE:$VERSION)

log "Waiting $WAIT seconds for Mirakurun to be available..."
sleep $WAIT

log "Getting OpenAPI/Swagger JSON..."
curl -fsSL http://localhost:$PORT/api/docs
