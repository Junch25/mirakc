# DO NOT EDIT THIS FILE BY HAND.
#
# This file was generated by scripts/make-github-workflows automagically.
name: CI
on:
  push:
    branches:
      - master
jobs:
  build:
    strategy:
      matrix:
        runner:
          - macOS-latest
          - ubuntu-latest
        rust:
          - stable
          #- nightly
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v2
      - name: Cache for Cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ matrix.rust }}-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: -v --release
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -v --release
  cross-build:
    strategy:
      matrix:
        runner:
          - ubuntu-latest
        rust:
          - stable
          #- nightly
        target:
          - arm-unknown-linux-gnueabi
          - armv7-unknown-linux-gnueabihf
          - aarch64-unknown-linux-gnu
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v2
      - name: Cache for Cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ matrix.target }}-${{ matrix.rust }}-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          override: true
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: -v --release --target=${{ matrix.target }}
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: test
          args: -v --release --target=${{ matrix.target }}
  coverage:
    needs:
      - build
      - cross-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          args: '-- --test-threads 1'
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v1
  docker:
    needs:
      - build
      - cross-build
    strategy:
      matrix:
        include:
          # tag-* values are defined in *.workflow.yml
          - target: alpine
            tag-latest: false
            tag-semver: ''
            tag-custom: master-alpine
            tag-custom-only: true
            platforms: 'linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64/v8'
          - target: debian # main target
            tag-latest: false
            tag-semver: ''
            tag-custom: master-debian,master
            tag-custom-only: true
            platforms: 'linux/amd64,linux/arm/v7,linux/arm64/v8'
        target:
          - alpine
          - debian
    if: github.repository == 'mirakc/mirakc'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Docker metadata
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ${{ env.IMAGE }}
          tag-latest: ${{ matrix.tag-latest }}
          tag-semver: ${{ matrix.tag-semver }}
          tag-custom: ${{ matrix.tag-custom }}
          tag-custom-only: ${{ matrix.tag-custom-only }}
      - name: Setup QEMU user-mode emulation
        uses: docker/setup-qemu-action@v1
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.target }}-${{ github.sha }}
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Make mirakurun.openapi.json
        run: |
          ./scripts/mirakurun-openapi-json -w 10 $MIRAKURUN_VERSION | ./scripts/fixup-openapi-json >mirakurun.openapi.json
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.${{ matrix.target }}
          platforms: ${{ matrix.platforms }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          push: false # TODO: true
env:
  IMAGE: mirakc/mirakc
  MIRAKURUN_VERSION: '3.3.0'
