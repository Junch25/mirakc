# DO NOT EDIT THIS FILE BY HAND.
#
# This file was generated by scripts/make-github-workflows automagically.
name: Pull Request
on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**.md'
jobs:
  build:
    strategy:
      matrix:
        runner:
          - macos-latest
          - ubuntu-latest
        rust:
          - stable
          #- nightly
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v2
      - name: Install macfuse (macos)
        if: matrix.runner == 'macos-latest'
        run: |
          brew install macfuse
      - name: Install libfuse3-dev (ubuntu)
        if: matrix.runner == 'ubuntu-latest'
        run: |
          sudo apt-get install libfuse3-dev pkg-config
      # Took from rust-analyzer/rust-analyzer#6208
      - name: Install GNU tar (workaround for actions/cache#403)
        if: matrix.runner == 'macos-latest'
        run: |
          brew install gnu-tar
          echo PATH="/usr/local/opt/gnu-tar/libexec/gnubin:$PATH" >>$GITHUB_ENV
      - name: Cache for Cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ matrix.rust }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ matrix.rust }}-
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: -v --release
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -v --release
  cross-build:
    strategy:
      matrix:
        runner:
          - ubuntu-latest
        rust:
          - stable
          #- nightly
        target:
          - i686-unknown-linux-gnu
          - arm-unknown-linux-gnueabi
          - armv7-unknown-linux-gnueabihf
          - aarch64-unknown-linux-gnu
    runs-on: ${{ matrix.runner }}
    steps:
      # Unfortunately, there is no libfuse3-dev packages for ARM in the official APT repository.
      # Therefore, we only build mirakc-core and run unit tests.
      - uses: actions/checkout@v2
      - name: Cache for Cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ matrix.target }}-${{ matrix.rust }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ matrix.target }}-${{ matrix.rust }}-
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          override: true
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: -v --release --target=${{ matrix.target }} --lib
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: test
          args: -v --release --target=${{ matrix.target }} --lib
  coverage:
    needs:
      - build
      - cross-build
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v2
      - name: Install libfuse3-dev
        run: |
          sudo apt-get install libfuse3-dev pkg-config
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: Clean
        uses: actions-rs/cargo@v1
        with:
          command: clean
      - name: Run coverage tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features --no-fail-fast --lib
        env:
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
          RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
      - name: Install grcov
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: grcov
      - name: Generate coverage data
        run: >-
          grcov target/debug --branch --llvm --ignore-not-existing -s . --ignore '*/src/main.rs' --ignore 'mirakc-core/src/error.rs' --ignore 'mirakc-core/src/tracing_ext.rs' --excl-line '<coverage:exclude/>|unimplemented!|unreachable!' --excl-start '<coverage:exclude>' --excl-stop '</coverage:exclude>' -t lcov -o lcov.info
      - name: Update to codecov.io
        uses: codecov/codecov-action@v1
        with:
          file: lcov.info
  # FIXME
  # -----
  # auto-merge doesn't work due to the change described in the following blog:
  # https://github.blog/changelog/2021-02-19-github-actions-workflows-triggered-by-dependabot-prs-will-run-with-read-only-permissions/
  #
  # See also:
  # https://github.com/actions/checkout/issues/298
  #
  # auto-merge:
  #   if: github.actor == 'dependabot[bot]'
  #   needs:
  #     - build
  #     - cross-build
