# DO NOT EDIT THIS FILE BY HAND.
#
# This file was generated by scripts/make-github-workflows automagically.
name: Pull Request
on:
  pull_request:
    branches:
      - master
jobs:
  build:
    strategy:
      matrix:
        runner:
          - macOS-latest
          - ubuntu-latest
        rust:
          - stable
          #- nightly
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v2
      - name: Cache for Cargo
        if: "!startsWith(matrix.runner, 'macOS')"
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ matrix.rust }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ matrix.rust }}-
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: -v --release
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -v --release
  cross-build:
    strategy:
      matrix:
        runner:
          - ubuntu-latest
        rust:
          - stable
          #- nightly
        target:
          - i686-unknown-linux-gnu
          - arm-unknown-linux-gnueabi
          - armv7-unknown-linux-gnueabihf
          - aarch64-unknown-linux-gnu
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v2
      - name: Cache for Cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ matrix.target }}-${{ matrix.rust }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ matrix.target }}-${{ matrix.rust }}-
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          override: true
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: -v --release --target=${{ matrix.target }}
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: test
          args: -v --release --target=${{ matrix.target }}
  coverage:
    needs:
      - build
      - cross-build
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: Clean
        uses: actions-rs/cargo@v1
        with:
          command: clean
      - name: Run coverage tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features --no-fail-fast
        env:
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
          RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
      - name: Install grcov
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: grcov
      - name: Generate coverage data
        run: >-
          grcov target/debug --branch --llvm --ignore-not-existing -s . --ignore '*/src/main.rs' --ignore '*/src/error.rs' --ignore '*/src/tracing_ext.rs' --excl-line '<coverage:exclude/>|unimplemented!|unreachable!' --excl-start '<coverage:exclude>' --excl-stop '</coverage:exclude>' -t lcov -o lcov.info
      - name: Update to codecov.io
        uses: codecov/codecov-action@v1
        with:
          file: lcov.info
  auto-merge:
    if: github.actor == 'dependabot[bot]'
    needs:
      - build
      - cross-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v2
        with:
          github-token: ${{secrets.GH_TOKEN}}
          script: |
            await github.pulls.createReview({
              owner: context.payload.repository.owner.login,
              repo: context.payload.repository.name,
              pull_number: context.payload.pull_request.number,
              event: 'APPROVE'
            })
            await github.pulls.merge({
              owner: context.payload.repository.owner.login,
              repo: context.payload.repository.name,
              pull_number: context.payload.pull_request.number
            })
